|Topo
clock_50 => clock_50.IN2
key[0] => key[0].IN1
key[1] => key[1].IN1
key[2] => key[2].IN1
key[3] => key[3].IN1
sw[0] => sw[0].IN1
sw[1] => sw[1].IN1
sw[2] => sw[2].IN1
sw[3] => sw[3].IN1
sw[4] => sw[4].IN1
sw[5] => sw[5].IN1
sw[6] => sw[6].IN1
sw[7] => sw[7].IN1
sw[8] => sw[8].IN1
sw[9] => sw[9].IN1
ledr[0] << <GND>
ledr[1] << <GND>
ledr[2] << <GND>
ledr[3] << <GND>
ledr[4] << <GND>
ledr[5] << <GND>
ledr[6] << <GND>
ledr[7] << <GND>
ledr[8] << <GND>
ledr[9] << <GND>
hex0[0] << Datapath:U0_DP.hex0
hex0[1] << Datapath:U0_DP.hex0
hex0[2] << Datapath:U0_DP.hex0
hex0[3] << Datapath:U0_DP.hex0
hex0[4] << Datapath:U0_DP.hex0
hex0[5] << Datapath:U0_DP.hex0
hex0[6] << Datapath:U0_DP.hex0
hex1[0] << Datapath:U0_DP.hex1
hex1[1] << Datapath:U0_DP.hex1
hex1[2] << Datapath:U0_DP.hex1
hex1[3] << Datapath:U0_DP.hex1
hex1[4] << Datapath:U0_DP.hex1
hex1[5] << Datapath:U0_DP.hex1
hex1[6] << Datapath:U0_DP.hex1
hex2[0] << Datapath:U0_DP.hex2
hex2[1] << Datapath:U0_DP.hex2
hex2[2] << Datapath:U0_DP.hex2
hex2[3] << Datapath:U0_DP.hex2
hex2[4] << Datapath:U0_DP.hex2
hex2[5] << Datapath:U0_DP.hex2
hex2[6] << Datapath:U0_DP.hex2
hex3[0] << Datapath:U0_DP.hex3
hex3[1] << Datapath:U0_DP.hex3
hex3[2] << Datapath:U0_DP.hex3
hex3[3] << Datapath:U0_DP.hex3
hex3[4] << Datapath:U0_DP.hex3
hex3[5] << Datapath:U0_DP.hex3
hex3[6] << Datapath:U0_DP.hex3
hex4[0] << Datapath:U0_DP.hex4
hex4[1] << Datapath:U0_DP.hex4
hex4[2] << Datapath:U0_DP.hex4
hex4[3] << Datapath:U0_DP.hex4
hex4[4] << Datapath:U0_DP.hex4
hex4[5] << Datapath:U0_DP.hex4
hex4[6] << Datapath:U0_DP.hex4
hex5[0] << Datapath:U0_DP.hex5
hex5[1] << Datapath:U0_DP.hex5
hex5[2] << Datapath:U0_DP.hex5
hex5[3] << Datapath:U0_DP.hex5
hex5[4] << Datapath:U0_DP.hex5
hex5[5] << Datapath:U0_DP.hex5
hex5[6] << Datapath:U0_DP.hex5


|Topo|Datapath:U0_DP
clock_50 => clock_50.IN1
key[0] => ~NO_FANOUT~
key[1] => ~NO_FANOUT~
key[2] => ~NO_FANOUT~
key[3] => ~NO_FANOUT~
switch[0] => ~NO_FANOUT~
switch[1] => ~NO_FANOUT~
switch[2] => ~NO_FANOUT~
switch[3] => ~NO_FANOUT~
switch[4] => ~NO_FANOUT~
switch[5] => ~NO_FANOUT~
switch[6] => ~NO_FANOUT~
switch[7] => ~NO_FANOUT~
r1 => ~NO_FANOUT~
r2 => r2.IN1
e1 => ~NO_FANOUT~
e2 => e2.IN1
e3 => ~NO_FANOUT~
e4 => ~NO_FANOUT~
sel => ~NO_FANOUT~
hex0[0] <= <GND>
hex0[1] <= <GND>
hex0[2] <= <GND>
hex0[3] <= <GND>
hex0[4] <= <GND>
hex0[5] <= <GND>
hex0[6] <= <GND>
hex1[0] <= <GND>
hex1[1] <= <GND>
hex1[2] <= <GND>
hex1[3] <= <GND>
hex1[4] <= <GND>
hex1[5] <= <GND>
hex1[6] <= <GND>
hex2[0] <= <GND>
hex2[1] <= <GND>
hex2[2] <= <GND>
hex2[3] <= <GND>
hex2[4] <= <GND>
hex2[5] <= <GND>
hex2[6] <= <GND>
hex3[0] <= <GND>
hex3[1] <= <GND>
hex3[2] <= <GND>
hex3[3] <= <GND>
hex3[4] <= <GND>
hex3[5] <= <GND>
hex3[6] <= <GND>
hex4[0] <= <GND>
hex4[1] <= <GND>
hex4[2] <= <GND>
hex4[3] <= <GND>
hex4[4] <= <GND>
hex4[5] <= <GND>
hex4[6] <= <GND>
hex5[0] <= <GND>
hex5[1] <= <GND>
hex5[2] <= <GND>
hex5[3] <= <GND>
hex5[4] <= <GND>
hex5[5] <= <GND>
hex5[6] <= <GND>
leds[0] <= <GND>
leds[1] <= <GND>
leds[2] <= <GND>
leds[3] <= <GND>
end_fpga <= <GND>
end_user <= <GND>
end_time <= Counter_time:U0_CT.end_time
win <= <GND>
match <= <GND>


|Topo|Datapath:U0_DP|Counter_time:U0_CT
clkt => end_time~reg0.CLK
clkt => tempo[0]~reg0.CLK
clkt => tempo[1]~reg0.CLK
clkt => tempo[2]~reg0.CLK
clkt => tempo[3]~reg0.CLK
R => end_time~reg0.ACLR
R => tempo[0]~reg0.ACLR
R => tempo[1]~reg0.ACLR
R => tempo[2]~reg0.ACLR
R => tempo[3]~reg0.ACLR
E => end_time~reg0.ENA
E => tempo[3]~reg0.ENA
E => tempo[2]~reg0.ENA
E => tempo[1]~reg0.ENA
E => tempo[0]~reg0.ENA
tempo[0] <= tempo[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempo[1] <= tempo[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempo[2] <= tempo[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tempo[3] <= tempo[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
end_time <= end_time~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Topo|Controle:U1_FSM
clock_50 => state~1.DATAIN
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
end_fpga => next_state.OUTPUTSELECT
end_fpga => next_state.OUTPUTSELECT
end_fpga => next_state.OUTPUTSELECT
end_fpga => next_state.OUTPUTSELECT
end_fpga => next_state.OUTPUTSELECT
end_fpga => next_state.OUTPUTSELECT
end_fpga => next_state.OUTPUTSELECT
end_user => next_state.OUTPUTSELECT
end_user => next_state.OUTPUTSELECT
end_user => next_state.OUTPUTSELECT
end_user => next_state.OUTPUTSELECT
end_user => next_state.OUTPUTSELECT
end_user => next_state.OUTPUTSELECT
end_user => next_state.OUTPUTSELECT
end_time => next_state.OUTPUTSELECT
end_time => next_state.OUTPUTSELECT
end_time => next_state.OUTPUTSELECT
end_time => next_state.OUTPUTSELECT
end_time => next_state.OUTPUTSELECT
end_time => next_state.OUTPUTSELECT
end_time => next_state.OUTPUTSELECT
win => Selector6.IN11
win => Selector2.IN4
match => Selector5.IN9
match => Selector6.IN4
r1 <= r1.DB_MAX_OUTPUT_PORT_TYPE
r2 <= r2.DB_MAX_OUTPUT_PORT_TYPE
e1 <= e1.DB_MAX_OUTPUT_PORT_TYPE
e2 <= e2.DB_MAX_OUTPUT_PORT_TYPE
e3 <= e3.DB_MAX_OUTPUT_PORT_TYPE
e4 <= e4.DB_MAX_OUTPUT_PORT_TYPE
sel <= sel.DB_MAX_OUTPUT_PORT_TYPE


